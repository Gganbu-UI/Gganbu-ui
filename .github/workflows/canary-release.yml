# .github/workflows/canary-release.yml
name: ✨ Canary release

on:
  push:
    branches:
      - devlop
      - feature/**
  pull_request:
    branches:
      - devlop
      - feature/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-changesets:
    runs-on: ubuntu-latest
    name: Check for changes in .changesets
    outputs:
      any_changed: ${{ steps.check_changesets.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check .changesets directory for changes
        id: check_changesets
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .changeset/**

  changesets-release:
    name: changesets-release
    runs-on: ubuntu-latest
    needs: [check-changesets]
    if: ${{ needs.check-changesets.outputs.any_changed == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Setup Git User
        shell: bash
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create Release Pull Request or Publish to NPM
        id: changesets
        uses: changesets/action@v1
        with:
          # this expects you to have a npm script called version that runs some logic and then calls `changeset version`.
          version: yarn run version:canary
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: yarn run release:canary
          title: 'ci(changesets): :package: version packages'
          commit: 'ci(changesets): version packages'
          setupGitUser: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  check-chromatic:
    runs-on: ubuntu-latest
    name: Check for changes in apps/storybook
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/storybook/**

  chromatic:
    name: Run visual tests
    needs: [check-chromatic]
    if: ${{ needs.check-chromatic.outputs.any_changed == 'true' }}
    uses: ./.github/workflows/chromatic.yml
    secrets: inherit

  slack:
    runs-on: ubuntu-latest
    steps:
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          # The following message update step does not accept a channel name.
          # Setting a channel ID here for consistency is highly recommended.
          channel-id: 'C076U73UDFH'
          payload: |
            {
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Get release information
        id: get_release_info
        run: |
          PACKAGES=$(grep -oP '@[^ ]*' $(find .changeset -type f -name '*.md' ! -name 'README.md') | sort -u)
          echo "packages=$PACKAGES" >> $GITHUB_ENV

          VERSIONS=()
          BRANCH=${GITHUB_REF#refs/heads/}
          declare -A PACKAGE_PATHS

          for PACKAGE in $PACKAGES; do
            PACKAGE_PATH=$(grep -rl "\"name\": \"$PACKAGE\"" ./packages | sed 's|/package.json||')
            PACKAGE_PATHS[$PACKAGE]=$PACKAGE_PATH
          done

          for PACKAGE in $PACKAGES; do
            PACKAGE_PATH=${PACKAGE_PATHS[$PACKAGE]}
            VERSION=$(grep -oP '^## \[\K[0-9]+\.[0-9]+\.[0-9]+' ${PACKAGE_PATH}/CHANGELOG.md | head -n 1)
            PACKAGE_AUTHORS=$(git log --pretty=format:"%an" ${PACKAGE_PATH} | sort | uniq)
            VERSIONS+=($VERSION)
          done

          echo "versions=${VERSIONS[*]}" >> $GITHUB_ENV
          echo "branch=$BRANCH" >> $GITHUB_ENV
      - name: Format Slack message
        id: format_slack_message
        run: |
          PACKAGES=(${PACKAGES})
          VERSIONS=(${VERSIONS})
          MESSAGE=""
          for i in "${!PACKAGES[@]}"; do
            PACKAGE_PATH=${PACKAGE_PATHS[${PACKAGES[$i]}]}
            MESSAGE="$MESSAGE\n*${PACKAGES[$i]}* - ${VERSIONS[$i]} by merry.lee <https://github.com/gganbu-org/gganbu-ui/blob/${{ env.branch }}/${PACKAGE_PATH}/CHANGELOG.md|Release Notes>"
          done
          echo "slack_message=$MESSAGE" >> $GITHUB_ENV
      - uses: slackapi/slack-github-action@v1.26.0
        with:
          # Unlike the step posting a new message, this step does not accept a channel name.
          # Please use a channel ID, not a name here.
          channel-id: 'C076U73UDFH'
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*새 릴리스 배포됨*\n\n${{ env.slack_message }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
